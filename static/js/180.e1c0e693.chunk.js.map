{"version":3,"file":"static/js/180.e1c0e693.chunk.js","mappings":"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","sources":["navs.ts","layouts/portal/Sidebar.tsx","layouts/portal/Navbar.tsx","layouts/portal/Portal.tsx"],"sourcesContent":["import {\n  faAngleRight,\n  faCog,\n  faTachometerAlt,\n  faFile,\n  faSearchLocation,\n  faLocationArrow,\n  faComments,\n  faSpinner,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst navItems = [\n  {\n    title: \"Places\",\n    path: \"/portal/place\",\n    icon: faLocationArrow,\n  },\n  {\n    title: \"Extras\",\n    path: \"#\",\n    icon: faComments,\n    children: [\n      {\n        title: \"Extras/Children\",\n        path: \"/portal/query\",\n        icon: \"\",\n      },\n    ],\n  },\n];\n\nexport { navItems };\n","import React, { useState } from \"react\";\nimport SimpleBar from \"simplebar-react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCog,\n  faSignOutAlt,\n  faTable,\n  faTimes,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  Accordion,\n  Badge,\n  Button,\n  Image,\n  Nav,\n  Navbar,\n} from \"@themesberg/react-bootstrap\";\nimport { navItems } from \"../../navs\";\nimport ReactHero from \"../../@core/assets/img/preview.png\";\nimport \"./sidebar.css\";\n\nexport default (props: any = {}) => {\n  const location = useLocation();\n  const { pathname } = location;\n  const [show, setShow] = useState(false);\n\n  const showClass = show ? \"show\" : \"\";\n  const onCollapse = () => setShow(!show);\n\n  const CollapsableNavItem = (props: any) => {\n    const { eventKey, title, icon, children = null } = props;\n    const defaultKey = pathname.indexOf(eventKey) !== -1 ? eventKey : \"\";\n\n    return (\n      <Accordion as={Nav.Item} defaultActiveKey={defaultKey}>\n        <Accordion.Item eventKey={eventKey}>\n          <Accordion.Button\n            as={Nav.Link}\n            className=\"d-flex justify-content-between align-items-center sidemenuicon\"\n          >\n            <span>\n              <span className=\"sidebar-icon\">\n                <FontAwesomeIcon icon={icon} />{\" \"}\n              </span>\n              <span className=\"sidebar-text \">{title}</span>\n            </span>\n          </Accordion.Button>\n          <Accordion.Body className=\"multi-level\">\n            <Nav className=\"flex-column\">{children}</Nav>\n          </Accordion.Body>\n        </Accordion.Item>\n      </Accordion>\n    );\n  };\n\n  const NavItem = (props: any) => {\n    const {\n      title,\n      link,\n      external,\n      target,\n      icon,\n      image,\n      badgeText,\n      badgeBg = \"secondary\",\n      badgeColor = \"primary\",\n    } = props;\n    const classNames = badgeText\n      ? \"d-flex justify-content-start align-items-center justify-content-between\"\n      : \"\";\n    const navItemClassName = link === pathname ? \"active\" : \"\";\n    const linkProps = external ? { href: link } : { as: Link, to: link };\n\n    return (\n      <Nav.Item className={navItemClassName} onClick={() => setShow(false)}>\n        <Nav.Link href={link} target={target} className={classNames}>\n          <span>\n            {icon ? (\n              <span className=\"sidebar-icon\">\n                <FontAwesomeIcon icon={icon} />{\" \"}\n              </span>\n            ) : null}\n            {image ? (\n              <Image\n                src={image}\n                width={20}\n                height={20}\n                className=\"sidebar-icon svg-icon\"\n              />\n            ) : null}\n\n            <span className=\"sidebar-text \">{title}</span>\n          </span>\n          {badgeText ? (\n            <Badge\n              pill\n              bg={badgeBg}\n              text={badgeColor}\n              className=\"badge-md notification-count ms-2\"\n            >\n              {badgeText}\n            </Badge>\n          ) : null}\n        </Nav.Link>\n      </Nav.Item>\n    );\n  };\n\n  let navs = navItems;\n\n  //   if (AuthUser.isLooggedIn()) {\n  //     let roles = AuthUser.getRoles();\n  //     if (roles.includes(UserRole.ADMIN) || roles.includes(\"DEO\") || roles.includes(\"USEO\")) {\n  //       navs = navItems;\n  //     }\n  //   }\n\n  return (\n    <>\n      <Navbar\n        expand={false}\n        collapseOnSelect\n        variant=\"dark\"\n        className=\"navbar-theme-primary px-4 d-md-none\"\n      >\n        <Navbar.Brand className=\"me-lg-5\" as={Link} to=\"/\">\n          <Image src={ReactHero} className=\"navbar-brand-light\" />\n        </Navbar.Brand>\n        <Navbar.Toggle\n          as={Button}\n          aria-controls=\"main-navbar\"\n          onClick={onCollapse}\n        >\n          <span className=\"navbar-toggler-icon\" />\n        </Navbar.Toggle>\n      </Navbar>\n      <CSSTransition timeout={300} in={show} classNames=\"sidebar-transition\">\n        <SimpleBar\n          className={`collapse ${showClass} sidebar d-md-block bg-primary text-white`}\n        >\n          <div className=\"sidebar-inner px-4 pt-3\">\n            <div className=\"user-card d-flex d-md-none align-items-center justify-content-between justify-content-md-center pb-4\">\n              <div className=\"d-flex align-items-center\"></div>\n              <Nav.Link\n                className=\"collapse-close d-md-none\"\n                onClick={onCollapse}\n              >\n                <FontAwesomeIcon icon={faTimes} />\n              </Nav.Link>\n            </div>\n            <Nav className=\"flex-column pt-3 pt-md-0 side-Logo-link\">\n              {/* <NavItem title=\"BANBEIS \" link=\"/\" className=\"logo\"  image={ReactHero}/> */}\n              <Link to=\"/\">\n                <div\n                  id=\"banbeis_home\"\n                  className=\"d-flex justify-content-center text-primary align-items-center p-5\"\n                >\n                  <Image src={ReactHero} width={22} height={22} />\n                  <span className=\"text-primary text-uppercase fw-bold\">\n                    Banbeis\n                  </span>\n                </div>\n              </Link>\n              {navs.map(({ nav, navIndex }: any) => {\n                if (nav?.children !== undefined && nav?.children?.length) {\n                  return (\n                    <CollapsableNavItem\n                      key={navIndex}\n                      eventKey={nav.path}\n                      title={nav.title}\n                      // icon={faTable}\n                      icon={nav.icon}\n                    >\n                      {nav.children.map(({ navChild, navChildIndex }: any) => {\n                        return (\n                          <NavItem\n                            key={navChildIndex}\n                            title={navChild.title}\n                            link={navChild.path}\n                          />\n                        );\n                      })}\n                    </CollapsableNavItem>\n                  );\n                } else {\n                  return (\n                    <NavItem\n                      key={navIndex}\n                      title={nav?.title}\n                      // icon={faCog}\n                      icon={nav?.icon}\n                      link={nav?.path}\n                    />\n                  );\n                }\n              })}\n            </Nav>\n          </div>\n        </SimpleBar>\n      </CSSTransition>\n    </>\n  );\n};\n","import React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport {\n  Col,\n  Container,\n  Dropdown,\n  Image,\n  ListGroup,\n  Nav,\n  Navbar,\n  Row,\n} from \"@themesberg/react-bootstrap\";\n\nexport default (props: any) => {\n  return (\n    <Navbar variant=\"dark\" expanded className=\"p-5 pr-30 bg-white\"></Navbar>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport Sidebar from \"./Sidebar\";\nimport Navbar from \"./Navbar\";\n// import Content from \"./Content\";\n// import {selectToastAlert, setToastAlert} from \"../../reducers/toastAlertSlice\";\n// import {selectDeleteModal, setDeleteModal} from \"../../reducers/deleteModalSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\n// import {DeleteModal, ToastAlert} from \"../../components/notification\";\n// import {setErrorMessage} from \"../../reducers/errorMessageSlice\";\n\nimport \"./Portal.scss\";\n\nconst Portal = () => {\n  const dispatch = useDispatch();\n\n  //   const {type} = useSelector(selectToastAlert);\n  //   const {deleteApi} = useSelector(selectDeleteModal);\n\n  //   useEffect(() => {\n\n  //     dispatch(setToastAlert({\n  //       type: '',\n  //       message: ''\n  //     }));\n\n  //     dispatch(setDeleteModal({\n  //       title: '',\n  //       message: ''\n  //     }));\n\n  //   }, [type, deleteApi]);\n\n  //   useEffect(() => {\n\n  //     dispatch(setErrorMessage({\n  //       errors: ''\n  //     }));\n\n  //   });\n\n  const [isActive, setActive] = useState(false);\n\n  const toggleClass = () => {\n    setActive(!isActive);\n  };\n\n  return (\n    <>\n      <div className={isActive ? \"sidebar-expand\" : \"\"}>\n        <Sidebar />\n      </div>\n      <main className={isActive ? \"content-hide\" : \"content\"}>\n        <Navbar onToggleFun={() => toggleClass()} />\n        {/* <Content/> */}\n        {/*<Footer />*/}\n      </main>\n      {/* <ToastAlert/> */}\n      {/* <DeleteModal/> */}\n    </>\n  );\n};\n\nexport default Portal;\n"],"names":["navItems","title","path","icon","faLocationArrow","faComments","children","location","useLocation","pathname","useState","show","setShow","showClass","onCollapse","CollapsableNavItem","props","eventKey","defaultKey","indexOf","Accordion","as","Nav","defaultActiveKey","className","NavItem","link","external","target","image","badgeText","badgeBg","badgeColor","classNames","navItemClassName","Link","onClick","href","Image","src","width","height","Badge","pill","bg","text","navs","Navbar","expand","collapseOnSelect","variant","to","ReactHero","Button","CSSTransition","timeout","in","faTimes","id","map","nav","navIndex","undefined","length","navChild","navChildIndex","expanded","useDispatch","isActive","setActive","Sidebar","onToggleFun"],"sourceRoot":""}